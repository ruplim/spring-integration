<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sws="http://www.springframework.org/schema/web-services"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.3.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <int:channel id="responseChannel"/>

    <!-- GET -->
	<int-http:inbound-gateway 
	    request-channel="httpGetChannel"
		reply-channel="responseChannel"
		supported-methods="GET"
		path="/emps/{empId}"
		message-converters="converters"
		mapped-request-headers="HTTP_REQUEST_HEADERS"
		mapped-response-headers="HTTP_RESPONSE_HEADERS"
		payload-expression="#pathVariables.empId">
		
		<int-http:request-mapping  produces="application/json, application/xml"/>
				
	    <int-http:header name="requestContextPath" 
	                   expression="T(org.springframework.web.context.request.RequestContextHolder).requestAttributes.request.contextPath"/>
      
	</int-http:inbound-gateway>
	
<!-- 	<int:router input-channel="httpInboundChannel" expression="T(org.springframework.integration.http.HttpHeaders).REQUEST_METHOD">
       <int:mapping value="GET"  channel="httpGetChannel"/>
       <int:mapping value="PUT"  channel="httpPutChannel"/>
    </int:router>	
 -->	
    <int:service-activator ref="empHttpService" method="get"  input-channel="httpGetChannel" output-channel="responseChannel"/>
    
    
    <!-- DELETE -->
    <int-http:inbound-channel-adapter
         channel="httpDeleteChannel"
         path="/emps/{empId}"
         supported-methods="DELETE"
         status-code-expression="T(org.springframework.http.HttpStatus).NO_CONTENT"
         payload-expression="#pathVariables.empId"/>

    <int:service-activator ref="empHttpService" method="delete" input-channel="httpDeleteChannel"/>
    
    <!-- PUT -->
    <int-http:inbound-channel-adapter
         channel="httpPutChannel"
         path="/emps/{empId}"
         supported-methods="PUT"
         request-payload-type="com.samples.jaxb.Employee"
         status-code-expression="T(org.springframework.http.HttpStatus).NO_CONTENT">
         
         <int-http:request-mapping     consumes="application/json, application/xml"/>
         <int-http:header name="EmpId" expression="#pathVariables.empId"/>
        
    </int-http:inbound-channel-adapter>
    <int:service-activator ref="empHttpService" method="put" input-channel="httpPutChannel"/>
         
    <!-- POST -->
    <int-http:inbound-gateway
         request-channel="httpPostChannel"
         reply-channel="responseChannel"
         supported-methods="POST"
         path="/emps"
         mapped-request-headers="HTTP_REQUEST_HEADERS"  
         mapped-response-headers="HTTP_RESPONSE_HEADERS"
         message-converters="converters" 
         request-payload-type="com.samples.jaxb.Employee">
         
        <int-http:request-mapping  consumes="application/json, application/xml"   produces="application/json, application/xml"/>
				
	    <int-http:header name="requestContextPath" 
	                   expression="T(org.springframework.web.context.request.RequestContextHolder).requestAttributes.request.contextPath"/>

     </int-http:inbound-gateway>
     <int:service-activator ref="empHttpService" method="post"   input-channel="httpPostChannel"   output-channel="responseChannel"/> 


    <!-- Search for all Employees -->
	<int-http:inbound-gateway 
	    request-channel="httpSearchChannel"
		reply-channel="responseChannel"
		supported-methods="GET"
		path="/emps"
		message-converters="converters"
		mapped-request-headers="HTTP_REQUEST_HEADERS"
		mapped-response-headers="HTTP_RESPONSE_HEADERS"
		payload-expression="new com.samples.EmployeeSearchDTO(#requestParams.getFirst('startOffSet'), #requestParams.getFirst('endOffSet'))">
		
		<int-http:request-mapping  produces="application/json, application/xml"/>
      
	</int-http:inbound-gateway>    
    <int:service-activator ref="empHttpService" method="search"   input-channel="httpSearchChannel"   output-channel="responseChannel"/>

	<util:list id="converters">
	    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	    <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
           <property name="marshaller"   ref="jaxbMarshaller" />
           <property name="unmarshaller" ref="jaxbMarshaller" />
        </bean> 
	</util:list>
    <bean id="empHttpService" class="com.samples.EmpService">
      <property name="empDao">
           <bean class="com.samples.EmpDao"/>
      </property>
    </bean>
     <bean  id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="com.samples.jaxb"/>
     </bean>  
</beans>